/**
 * Note: The returned array must be malloced, assume caller calls free().
 */

int* twoSum(int* nums, int numsSize, int target, int* returnSize) {

     *returnSize = 2;
     int *ret;
     ret = (int *)malloc(sizeof(int )* 2);

    int **hash ;
    hash = (int **)calloc(numsSize,sizeof(int *));

    for (int i=0;i<numsSize;i++)
    {
        hash[i] = (int *)calloc(2,sizeof(int));
    }
    for (int i=0;i<numsSize;i++)
    {
        if (hash[(target - nums[i])%numsSize][0] != (target - nums[i]))
        {
            hash[nums[i]%numsSize][0]=nums[i];
            hash[nums[i]%numsSize][1]=i;
        }
        else{
            ret[0] = hash[(target - nums[i])%numsSize][1];
            ret[1] = hash[nums[i]%numsSize][1];
        }
    }

     return ret;

}

//Runtime 135ms
//Memory 8.4mb
